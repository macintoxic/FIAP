// <auto-generated />
using System;
using LojaSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SistemaLoja.Migrations
{
    [DbContext(typeof(LojaContext))]
    partial class LojaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("LojaSystem.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Produtos eletrônicos em geral",
                            Nome = "Eletrônicos"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Computadores, notebooks e periféricos",
                            Nome = "Informática"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Móveis para casa e escritório",
                            Nome = "Móveis"
                        });
                });

            modelBuilder.Entity("LojaSystem.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joao@email.com",
                            Nome = "João Silva",
                            Telefone = "(11) 99999-1234"
                        },
                        new
                        {
                            Id = 2,
                            DataCadastro = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maria@email.com",
                            Nome = "Maria Santos",
                            Telefone = "(11) 88888-5678"
                        },
                        new
                        {
                            Id = 3,
                            DataCadastro = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pedro@email.com",
                            Nome = "Pedro Oliveira",
                            Telefone = "(11) 77777-9012"
                        });
                });

            modelBuilder.Entity("LojaSystem.Models.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItensPedido");
                });

            modelBuilder.Entity("LojaSystem.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("LojaSystem.Models.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataUltimaVisita")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Perfis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            DataUltimaVisita = new DateTime(2025, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joao.perfil@email.com"
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            DataUltimaVisita = new DateTime(2025, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maria.perfil@email.com"
                        });
                });

            modelBuilder.Entity("LojaSystem.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<int>("EstoqueAtual")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstoqueAtual = 25,
                            Nome = "Smartphone Samsung Galaxy",
                            Preco = 1299.90m
                        },
                        new
                        {
                            Id = 2,
                            DataCadastro = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstoqueAtual = 15,
                            Nome = "Notebook Dell Inspiron",
                            Preco = 2499.99m
                        },
                        new
                        {
                            Id = 3,
                            DataCadastro = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstoqueAtual = 10,
                            Nome = "Mesa de Escritório",
                            Preco = 599.90m
                        },
                        new
                        {
                            Id = 4,
                            DataCadastro = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstoqueAtual = 50,
                            Nome = "Mouse Gamer Logitech",
                            Preco = 199.90m
                        });
                });

            modelBuilder.Entity("LojaSystem.Models.ProdutoCategoria", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProdutoId", "CategoriaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("ProdutoCategorias");

                    b.HasData(
                        new
                        {
                            ProdutoId = 1,
                            CategoriaId = 1
                        },
                        new
                        {
                            ProdutoId = 2,
                            CategoriaId = 2
                        },
                        new
                        {
                            ProdutoId = 2,
                            CategoriaId = 1
                        },
                        new
                        {
                            ProdutoId = 3,
                            CategoriaId = 3
                        },
                        new
                        {
                            ProdutoId = 4,
                            CategoriaId = 2
                        },
                        new
                        {
                            ProdutoId = 4,
                            CategoriaId = 1
                        });
                });

            modelBuilder.Entity("LojaSystem.Models.ItemPedido", b =>
                {
                    b.HasOne("LojaSystem.Models.Pedido", "Pedido")
                        .WithMany("ItensPedido")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaSystem.Models.Produto", "Produto")
                        .WithMany("ItensPedido")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LojaSystem.Models.Pedido", b =>
                {
                    b.HasOne("LojaSystem.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("LojaSystem.Models.Perfil", b =>
                {
                    b.HasOne("LojaSystem.Models.Cliente", "Cliente")
                        .WithOne("Perfil")
                        .HasForeignKey("LojaSystem.Models.Perfil", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("LojaSystem.Models.ProdutoCategoria", b =>
                {
                    b.HasOne("LojaSystem.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaSystem.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LojaSystem.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("Perfil")
                        .IsRequired();
                });

            modelBuilder.Entity("LojaSystem.Models.Pedido", b =>
                {
                    b.Navigation("ItensPedido");
                });

            modelBuilder.Entity("LojaSystem.Models.Produto", b =>
                {
                    b.Navigation("ItensPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
